LOCAL MAXX:=8, MAXY:=8, PX:=1, PY:=1, SCORE:=0;

MATCONT(MAT,VAL)
BEGIN
LOCAL MX,MY, SIZ:=SIZE(MAT), AM:=0;
FOR MX FROM 1 TO SIZ(1) DO
 FOR MY FROM 1 TO SIZ(2) DO
  IF MAT(MX,MY)==VAL THEN
   AM:=AM+1;
  END;
 END;
END;
RETURN AM;
END;


DISP(GRID)
BEGIN
LOCAL PICK, MRG:=4;
RECT(G1,0);
RECT_P(G1,PX*24,PY*24,(PX+1)*24,(PY+1)*24,#888888,0);
FOR Y FROM 1 TO 8 DO
FOR X FROM 1 TO 8 DO
 PICK:=GRID(X,Y);
 RECT_P(G1,X*24+MRG,Y*24+MRG,(X+1)*24-MRG,(Y+1)*24-MRG,(PICK MOD 2)*256*256*255+(IP(PICK/2)MOD 2)*256*255+IP(IP(PICK/2)/2)*255);
 TEXTOUT_P(PICK,G1,X*24+8,Y*24+5,3,0);
END;
END;
TEXTOUT_P(SCORE,G1,240,40,5,#FFFFFF);
BLIT_P(G0,G1);
END;


CHEK(GRID,SCR)
BEGIN
LOCAL ALIGN, MINAL:=3, GRID2:=MAKEMAT(0,8,8);
FOR Y FROM 1 TO MAXY DO
 ALIGN:=1;
 FOR X FROM 2 TO MAXX DO
  IF GRID(X,Y)==GRID(X-1,Y) THEN
   ALIGN:=ALIGN+1;
  ELSE
   IF ALIGN≥MINAL THEN
    FOR A FROM 1 TO ALIGN DO
     GRID2(X-A,Y):=1;
    END;
    IF SCR==1 THEN SCORE:=SCORE+ALIGN*50; END;
   END;
   ALIGN:=1;
  END;  
 END;
 IF ALIGN≥MINAL THEN
  FOR A FROM 1 TO ALIGN DO
   GRID2(X-A,Y):=1;
  END;
  IF SCR==1 THEN SCORE:=SCORE+ALIGN*50; END;
 END;
END;
FOR X FROM 1 TO MAXX DO
 ALIGN:=1;
 FOR Y FROM 2 TO MAXY DO
  IF GRID(X,Y)==GRID(X,Y-1) THEN
   ALIGN:=ALIGN+1;
  ELSE
   IF ALIGN≥MINAL THEN
    FOR A FROM 1 TO ALIGN DO
     GRID2(X,Y-A):=1;
    END;
    IF SCR==1 THEN SCORE:=SCORE+ALIGN*50; END;
   END;
   ALIGN:=1;
  END;  
 END;
 IF ALIGN≥MINAL THEN
  FOR A FROM 1 TO ALIGN DO
   GRID2(X,Y-A):=1;
  END;
  IF SCR==1 THEN SCORE:=SCORE+ALIGN*50; END;
 END;
END;
FOR X FROM 1 TO 8 DO
 FOR Y FROM 1 TO 8 DO
  IF GRID2(X,Y)==1 THEN GRID(X,Y):=0; END;
 END;
END;
RETURN GRID;
END;


FILL(GRID)
BEGIN
FOR X FROM 1 TO 8 DO
 IF GRID(X,1)==0 THEN
  GRID(X,1):=RANDINT(1,7);
 END;
 FOR Y FROM 8 DOWNTO 2 DO
  IF GRID(X,Y)==0 THEN
   GRID(X,Y):=GRID(X,Y-1);
   GRID(X,Y-1):=0;
  END;
 END;
END;
RETURN GRID;
END;


CONTROL(GRID)
BEGIN
LOCAL GRID2:=GRID, GRID3:=GRID, KEE;
GETKEY▶KEE;
CASE
 IF KEE== 2 THEN PY:=((PY-1)-1)MOD MAXY +1 END;
 IF KEE==12 THEN PY:=((PY-1)+1)MOD MAXY +1 END;
 IF KEE== 7 THEN PX:=((PX-1)-1)MOD MAXX +1 END;
 IF KEE== 8 THEN PX:=((PX-1)+1)MOD MAXX +1 END;
 IF KEE==33 AND PY≠1 THEN
  GRID2(PX,PY-1):=GRID(PX,PY);
  GRID2(PX,PY):=GRID(PX,PY-1); 
 END;
 IF KEE==43 AND PY≠8 THEN
  GRID2(PX,PY+1):=GRID(PX,PY);
  GRID2(PX,PY):=GRID(PX,PY+1); 
 END;
 IF KEE==37 AND PX≠1 THEN
  GRID2(PX-1,PY):=GRID(PX,PY);
  GRID2(PX,PY):=GRID(PX-1,PY); 
 END;
 IF KEE==39 AND PX≠8 THEN
  GRID2(PX+1,PY):=GRID(PX,PY);
  GRID2(PX,PY):=GRID(PX+1,PY); 
 END;
END;

GRID3:=CHEK(GRID2,0);
IF GRID3≠GRID2 THEN
 GRID:=GRID2;
ELSE
 GRID:=GRID;
END;
RETURN GRID;
END;


EXPORT MATCH3()
BEGIN
LOCAL GRID:=MAKEMAT(RANDINT(1,7),MAXX,MAXY);
LOCAL GRIDC:=GRID;
DIMGROB_P(G1,320,240);

REPEAT
 GRID:=GRIDC;
 GRIDC:=CHEK(GRID,0);
 WHILE MATCONT(GRIDC,0) DO
  GRIDC:=FILL(GRIDC);
 END;
UNTIL GRID==GRIDC;

WHILE 1 DO

DISP(GRID);
GRID:=CHEK(GRID,1);
WHILE MATCONT(GRID,0) DO
 GRID:=FILL(GRID);
 DISP(GRID);
END;
GRID:=CONTROL(GRID);

END;

END;
